<section class=" bg-background py-16 border-b border-border neg-zindex">
  <div class="container mx-auto px-4">
    <div class="max-w-4xl">
      <h1 class="font-display text-4xl md:text-6xl text-foreground mb-4 tracking-tight">SUBSTANCES [OILS]</h1>
      <p class="text-xl md:text-2xl text-muted-foreground font-medium">
        Smells like everything you want, and nothing you don't.
      </p>
    </div>
  </div>
</section>

<div class="container mx-auto px-4 py-8">
  <div class="flex flex-col lg:flex-row gap-8">
    <aside class="lg:w-80 flex-shrink-0 neg-zindex">
      <div class="bg-card border border-border rounded-lg p-6 sticky top-24">
        <div class="flex items-center justify-between mb-6 pb-4 border-b border-border neg-zindex">
          <div>
            <h2 class="font-display text-3xl text-foreground tracking-tight">FILTERS</h2>
            <p class="text-sm text-muted-foreground mt-1">48 items</p>
          </div>
        </div>
        {% render 'collection-filters' %}
        <button
          data-slot="button"
          class="inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md font-medium disabled:pointer-events-none disabled:opacity-50 [&amp;_svg]:pointer-events-none [&amp;_svg:not([class*='size-'])]:size-4 shrink-0 [&amp;_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive h-9 px-4 py-2 has-[&gt;svg]:px-3 w-full mt-6 bg-primary text-primary-foreground hover:bg-primary/90 font-display text-lg tracking-wide shadow-[0_4px_0_0_rgba(0,0,0,0.3)] hover:shadow-[0_2px_0_0_rgba(0,0,0,0.3)] active:shadow-none active:translate-y-1 transition-all"
        >
          APPLY FILTERS
        </button>
        <style>
          .custom-scrollbar::-webkit-scrollbar {
            width: 6px;
          }
          .custom-scrollbar::-webkit-scrollbar-track {
            background: oklch(0.15 0 0);
            border-radius: 3px;
          }
          .custom-scrollbar::-webkit-scrollbar-thumb {
            background: oklch(0.7 0.25 40);
            border-radius: 3px;
          }
          .custom-scrollbar::-webkit-scrollbar-thumb:hover {
            background: oklch(0.75 0.25 40);
          }
        </style>
      </div>
    </aside>
    <div class="flex-1 neg-zindex">
      <div>
        {% render 'collection-toolbar', products_count: collection.products_count, sort_label: 'Featured' %}
        {% comment %} Dynamic Product Grid {% endcomment %}
        {% assign products_per_page = section.settings.products_per_page | default: 16 %}

        {% comment %} Grid classes based on column settings {% endcomment %}

        <div class="grid gap-6 grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-3">
          {% comment %} Loop through collection products {% endcomment %}
          {% if collection.products.size > 0 %}
            {% for product in collection.products limit: products_per_page %}
              {% render 'product-card', product: product, show_badge: true %}
            {% endfor %}
          {% else %}
            {% comment %} Empty state {% endcomment %}
            <div class="col-span-full text-center py-16">
              <div class="max-w-md mx-auto">
                <svg
                  class="w-16 h-16 mx-auto text-muted-foreground mb-4"
                  fill="none"
                  stroke="currentColor"
                  viewBox="0 0 24 24"
                >
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20 13V6a2 2 0 00-2-2H6a2 2 0 00-2 2v7m16 0v5a2 2 0 01-2 2H6a2 2 0 01-2-2v-5m16 0h-2.586a1 1 0 00-.707.293l-2.414 2.414a1 1 0 01-.707.293h-3.172a1 1 0 01-.707-.293l-2.414-2.414A1 1 0 006.586 13H4"></path>
                </svg>
                <h3 class="text-lg font-medium text-foreground mb-2">No products found</h3>
                <p class="text-muted-foreground mb-4">This collection doesn't contain any products yet.</p>
                <a
                  href="{{ routes.all_products_collection_url }}"
                  class="inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md font-medium h-9 px-4 py-2 bg-primary text-primary-foreground hover:bg-primary/90 transition-colors"
                >
                  Browse All Products
                </a>
              </div>
            </div>
          {% endif %}
        </div>

        {% comment %} Pagination / Load More {% endcomment %}
        {% if collection.products.size > products_per_page %}
          <div class="mt-12 text-center">
            <button
              data-slot="button"
              class="inline-flex items-center justify-center gap-2 whitespace-nowrap font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive shadow-xs dark:bg-input/30 dark:border-input dark:hover:bg-input/50 h-10 rounded-md has-[>svg]:px-4 border-2 border-primary text-primary hover:bg-primary hover:text-primary-foreground font-display text-lg tracking-wide px-12 bg-transparent"
            >
              LOAD MORE
            </button>
          </div>
        {% endif %}
      </div>
    </div>
  </div>
</div>

<script>
  class ProductCardForm extends HTMLElement {
    constructor() {
      super();
      this.form = this.querySelector('form');
      this.submitButton = this.querySelector('.add-to-cart-btn');
      this.submitButtonText = this.submitButton.querySelector('.btn-text');
      this.cart = document.querySelector('cart-drawer') || document.querySelector('cart-notification');

      if (this.cart && this.submitButton) {
        this.submitButton.setAttribute('aria-haspopup', 'dialog');
      }

      this.form.addEventListener('submit', this.onSubmitHandler.bind(this));
    }

    onSubmitHandler(evt) {
      evt.preventDefault();
      if (this.submitButton.getAttribute('aria-disabled') === 'true') return;

      this.submitButton.setAttribute('aria-disabled', true);
      this.submitButton.classList.add('loading');
      this.submitButtonText.textContent = 'ADDING...';

      const formData = new FormData(this.form);

      if (this.cart) {
        formData.append(
          'sections',
          this.cart.getSectionsToRender().map((section) => section.id)
        );
        formData.append('sections_url', window.location.pathname);
        this.cart.setActiveElement(document.activeElement);
      }

      fetch(window.Shopify.routes.root + 'cart/add.js', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/x-www-form-urlencoded',
          'X-Requested-With': 'XMLHttpRequest',
        },
        body: new URLSearchParams(formData),
      })
        .then((response) => response.json())
        .then((data) => {
          if (data.status) {
            this.handleError(data.description);
            return;
          }

          // Success - show ADDED! briefly
          this.submitButtonText.textContent = 'ADDED!';
          this.submitButton.classList.remove('loading');

          // Update cart and open drawer
          if (this.cart) {
            fetch('/cart.js')
              .then((response) => response.json())
              .then((cartData) => {
                // Trigger cart update event
                document.dispatchEvent(
                  new CustomEvent('cart:updated', {
                    detail: { cart: cartData },
                  })
                );

                // Open cart drawer
                this.cart.open(this.submitButton);

                // Reset button after delay
                setTimeout(() => {
                  this.resetButton();
                }, 1000);
              });
          } else {
            // Fallback - redirect to cart
            setTimeout(() => {
              window.location = window.Shopify.routes.root + 'cart';
            }, 1000);
          }
        })
        .catch((error) => {
          console.error('Error:', error);
          this.handleError('Something went wrong. Please try again.');
        });
    }

    handleError(message) {
      this.submitButtonText.textContent = 'ERROR';
      this.submitButton.classList.remove('loading');

      // Show error briefly then reset
      setTimeout(() => {
        this.resetButton();
      }, 2000);
    }

    resetButton() {
      this.submitButton.setAttribute('aria-disabled', false);
      this.submitButton.classList.remove('loading');
      this.submitButtonText.textContent = 'ADD TO CART';
    }
  }

  customElements.define('product-card-form', ProductCardForm);
</script>

{% schema %}
{
  "name": "t:sections.main-collection-product-grid.name",
  "class": "section",
  "settings": [
    {
      "type": "range",
      "id": "products_per_page",
      "min": 8,
      "max": 36,
      "step": 4,
      "default": 16,
      "label": "t:sections.main-collection-product-grid.settings.products_per_page.label"
    },
    {
      "type": "range",
      "id": "columns_desktop",
      "min": 1,
      "max": 6,
      "step": 1,
      "default": 4,
      "label": "t:sections.main-collection-product-grid.settings.columns_desktop.label"
    },
    {
      "type": "select",
      "id": "columns_mobile",
      "default": "2",
      "label": "t:sections.main-collection-product-grid.settings.columns_mobile.label",
      "options": [
        {
          "value": "1",
          "label": "t:sections.main-collection-product-grid.settings.columns_mobile.options__1.label"
        },
        {
          "value": "2",
          "label": "t:sections.main-collection-product-grid.settings.columns_mobile.options__2.label"
        }
      ]
    },
    {
      "type": "color_scheme",
      "id": "color_scheme",
      "label": "t:sections.all.colors.label",
      "info": "t:sections.all.colors.has_cards_info",
      "default": "scheme-1"
    },
    {
      "type": "header",
      "content": "t:sections.main-collection-product-grid.settings.header__3.content"
    },
    {
      "type": "select",
      "id": "image_ratio",
      "options": [
        {
          "value": "adapt",
          "label": "t:sections.main-collection-product-grid.settings.image_ratio.options__1.label"
        },
        {
          "value": "portrait",
          "label": "t:sections.main-collection-product-grid.settings.image_ratio.options__2.label"
        },
        {
          "value": "square",
          "label": "t:sections.main-collection-product-grid.settings.image_ratio.options__3.label"
        }
      ],
      "default": "adapt",
      "label": "t:sections.main-collection-product-grid.settings.image_ratio.label"
    },
    {
      "type": "select",
      "id": "image_shape",
      "options": [
        {
          "value": "default",
          "label": "t:sections.all.image_shape.options__1.label"
        },
        {
          "value": "arch",
          "label": "t:sections.all.image_shape.options__2.label"
        },
        {
          "value": "blob",
          "label": "t:sections.all.image_shape.options__3.label"
        },
        {
          "value": "chevronleft",
          "label": "t:sections.all.image_shape.options__4.label"
        },
        {
          "value": "chevronright",
          "label": "t:sections.all.image_shape.options__5.label"
        },
        {
          "value": "diamond",
          "label": "t:sections.all.image_shape.options__6.label"
        },
        {
          "value": "parallelogram",
          "label": "t:sections.all.image_shape.options__7.label"
        },
        {
          "value": "round",
          "label": "t:sections.all.image_shape.options__8.label"
        }
      ],
      "default": "default",
      "label": "t:sections.all.image_shape.label"
    },
    {
      "type": "checkbox",
      "id": "show_secondary_image",
      "default": false,
      "label": "t:sections.main-collection-product-grid.settings.show_secondary_image.label"
    },
    {
      "type": "checkbox",
      "id": "show_vendor",
      "default": false,
      "label": "t:sections.main-collection-product-grid.settings.show_vendor.label"
    },
    {
      "type": "checkbox",
      "id": "show_rating",
      "default": false,
      "label": "t:sections.main-collection-product-grid.settings.show_rating.label",
      "info": "t:sections.main-collection-product-grid.settings.show_rating.info"
    },
    {
      "type": "select",
      "id": "quick_add",
      "default": "none",
      "label": "t:sections.main-collection-product-grid.settings.quick_add.label",
      "options": [
        {
          "value": "none",
          "label": "t:sections.main-collection-product-grid.settings.quick_add.options.option_1"
        },
        {
          "value": "standard",
          "label": "t:sections.main-collection-product-grid.settings.quick_add.options.option_2"
        },
        {
          "value": "bulk",
          "label": "t:sections.main-collection-product-grid.settings.quick_add.options.option_3"
        }
      ]
    },
    {
      "type": "header",
      "content": "t:sections.main-collection-product-grid.settings.header__1.content"
    },
    {
      "type": "checkbox",
      "id": "enable_filtering",
      "default": true,
      "label": "t:sections.main-collection-product-grid.settings.enable_filtering.label",
      "info": "t:sections.main-collection-product-grid.settings.enable_filtering.info"
    },
    {
      "type": "select",
      "id": "filter_type",
      "options": [
        {
          "value": "horizontal",
          "label": "t:sections.main-collection-product-grid.settings.filter_type.options__1.label"
        },
        {
          "value": "vertical",
          "label": "t:sections.main-collection-product-grid.settings.filter_type.options__2.label"
        },
        {
          "value": "drawer",
          "label": "t:sections.main-collection-product-grid.settings.filter_type.options__3.label"
        }
      ],
      "default": "horizontal",
      "label": "t:sections.main-collection-product-grid.settings.filter_type.label"
    },
    {
      "type": "checkbox",
      "id": "enable_sorting",
      "default": true,
      "label": "t:sections.main-collection-product-grid.settings.enable_sorting.label"
    },
    {
      "type": "header",
      "content": "t:sections.all.padding.section_padding_heading"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_top",
      "default": 36
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_bottom",
      "default": 36
    }
  ]
}
{% endschema %}
